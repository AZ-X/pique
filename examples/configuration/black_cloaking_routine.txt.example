# IF YOU MAKE ANY CHANGES TO THIS FILE, YOU HAVE TO RESTART THE PROGRAM IN ORDER TO SEE THEIR EFFECTS. (Any OS Other Than Windows)
# IF YOU MAKE ANY CHANGES WHEN RUNNING, YOU WILL SEE THEIR EFFECTS IMMEDIATELY. (Windows and WINDOWS_FILEMON of Per-channel Config)


# This is the <Example File> for a conception of [black_cloaking_routine] refer to the configuration.
# Can rename this file to any name you want. IN repique.toml.example 'routine.txt'
#
# It contains user-defined mappings between domain names and addresses.
# It matches both dns request(QNAME) and response(CNAME if carry with)
#
# The standard format is: TARGET PATTERN [PATTERN2] [PATTERN3] ...
#
# Where TARGET is in dotted-quad notation for IPv4 or in colon-separated groups for IPv6 or shortenings in specialty
# TARGET could be a special action
# See ***********OTHER TARGETS*********** below
# IPv6 address must be enclosed in square brackets
# Where PATTERN or PATTERNs are strings separated by white spaces.
#
# A line starting with any whitespace and the '#' character
# (and everything after it if it's found within a line and in back of whitespace characters)
# is considered a comment and therefore ignored.

# #comments blah-blah-blah
#             #comments: whitespace blah-blah-blah
#     127.0.0.1 localhost #comments: following blah-blah-blah
# 127.0.0.1 /localhost#thisisnotacomment #comments: '/localhost#thisisnotacomment' is considered as a match

# PATTERN can be a fully qualified domain name (ended with a dot)
# Notice: A fully qualified domain name for PATTERN is Case Sensitive

# e.g. foxnews.com.

# PATTERN can also be regular expressions if starting with a '/' character:
# Notice: Regular Expressions for PATTERN is Case Insensitive by default

# 127.0.0.1 /^ads?\..*$
# 1.1.1.1 /^static0[1-9]\.quad9\.net\.$     #comments: regex='/^static0[1-9]\.quad9\.net\.$'
# 9.9.9.9 /^fake\.cloudflare\.com\.$ faker.1.1.1.1. #comments: regex='/^fake\.cloudflare\.com\.$' and domain=faker.1.1.1.1.

# Note that there's no final '/' at the end of a regular expression. More info about the regular expression engine and
# its syntax can be found online.
# Regular expression is a considerable and formal solution substitutes wildcard characters.
# \Q...\E is useful for literal text e.g. RF /\.google\.com\.$ is equal to RF /\Q.google.com.\E


# *********************************OTHER TARGETS************************************************
#                                  OTHER TARGETS
# *********************************OTHER TARGETS************************************************
#///////////////////////////////////////////////////////////////////////////////////////////////
# Negative responses for NXDOMAIN=NX and REFUSED=RF entries 
# Format is: RF [PATTERN1](DOMAIN/REGEX) [PATTERN2](DOMAIN/REGEX) ...
# Format is: NX [PATTERN1](DOMAIN/REGEX) [PATTERN2](DOMAIN/REGEX) ...

# can also be mapped to domain names or regular expressions using all of the possibilities

# e.g.
# RF /\.google\.com\.$
# RF /^ads?\.

# NX /\.google\.com\.$
# NX /^ads?\.


#///////////////////////////////////////////////////////////////////////////////////////////////
# Controls of DNS cache; No Cache=NC (No Retrieve but Store)
# Format is: NC [PATTERN1](DOMAIN) [PATTERN2](DOMAIN) ...

# Indicate to query upstreams instead of using cache
# When combining with WINDOWS_FILEMON, it could be considered as discarding and refreshing certain entries in cache temporarily
# Notice: only fully qualified domain names are supported

# e.g.
# NC www.google.com.
# NC www.microsoft.com.


#///////////////////////////////////////////////////////////////////////////////////////////////
# Preloading of DNS cache; Preloading=PL
# Format is: PL [PATTERN1](DOMAIN) [PATTERN2](DOMAIN) ...
# Format is: PL anyname#(GROUP NAME) [PATTERN2](DOMAIN) [PATTERN3](DOMAIN) ... 
# Format is: PL [PATTERN1](DOMAIN) anyname#(GROUP NAME) [PATTERN3](DOMAIN) ...
# Format is: PL [PATTERN1](DOMAIN) [PATTERN2](DOMAIN) anyname#(GROUP NAME) ...

# Named preloading groups: any name ends with '#'
# Indicate to query upstreams for predefined domains when certain query is ongoing
# IT MIGHT BE A POWERFUL THING WHEN YOU ARE STILL PLAYING 'Cyberpunk 2077' OR TYING UP GROUPS OF CLOUD APPS
# Notice: only fully qualified domain names are supported (leading and preloading)
# A line can contains more than one named preloading groups, but only last one is effective
# A line without named preloading groups is considered to a startup preloading group
# Named preloading groups are taking action when first domain matched
# Startup preloading group is taking action when program started or reloaded(WINDOWS_FILEMON) and any domain matched
# Leading is the first PATTERN for a group (multiline)

# e.g.
# group name: e00; matching leading domain(trigger): www.example00.com; preloading domains: www.example0[1-8].com
# PL e00# www.example00.com. www.example01.com. www.example02.com. www.example03.com.
# PL e00# www.example05.com. www.example06.com. www.example07.com. www.example08.com.

# group names: only e01 and name1 are effective;
# PL e0a# www.example2.com. e02# www.example3.com. e01#
# PL name2# www.example22.com. name3# www.example33.com. name1#


# startup preloading group
# PL www.google.com. www.microsoft.com.
#
# same as 
#
# PL www.google.com. 
# PL wwww.microsoft.com.


#///////////////////////////////////////////////////////////////////////////////////////////////
# Alias of DNS QNAME; Alias=AS
# Format is: AS TARGET(DOMAIN) [PATTERN2](REGEX) [PATTERN3](REGEX) ...

# Indicate to query upstreams by using a target domain instead of matched domains
# IT IS USEFUL WHEN BYPASSING CERTAIN IP/CDN DISTRIBUTING/TEST (WEBS PRAISE IT AS LOAD BALANCE)
# YOU USE IT ONLY IF YOU HAVE DONE A CONFIDENT CHECKUP
# Notice: only regular expressions are supported (matching)
# Be careful: the program DO NOT check self-loop; it sucks in case of that.

# e.g.
# mapping x.example.com y.example.com z.example.com to a.example.com
# mapping x.example00.com y.example00.com z.example00.com to a.example.com as well
# AS a.example.com. /[xyz]\.example\.com\.$ /[xyz]\.example00\.com\.$

# self-loop: x.example00.com -> a.example.com -> x.example00.com
# AS a.example.com.  /[xyz]\.example00\.com\.$
# AS x.example00.com. /[abc]\.example\.com\.$

#///////////////////////////////////////////////////////////////////////////////////////////////
# *********************************OTHER TARGETS END**********************************************
#                                  OTHER TARGETS END
# *********************************OTHER TARGETS END**********************************************



# If a regex match is determinable to both RF and NX, dedicated match is RF. 
# (for above case RF www.google.com. will take effect)
#
# The best way to effectively blocking every domain except the ones you explicitly allow is manipulating complex regular expressions.
#
# To minimize resources, only one file can be associated to certain listener.
# Listeners can share one file or use their independent one.


## Example of both invalid and valid regex patterns:
##
##
## *.example.com      | warning: program panics because '*' is not quantifiable
## example.com        | matches any domain name contains example(any character)com e.g. example0com.org.xyz
## example\.com\.$    | matches example.com and all names within that zone such as www.example.com
## .*\.example\.com\.$| matches all names within that zone such as www.example.com
## ^ads\..*           | matches anything with an "ads." prefix
## sex                | matches any name containing that substring
## ^ads[0-9]*         | matches "ads" followed by zero or more digits
## ^ads[0-9]+         | matches "ads" followed by one or more digits
## ^ads.*\.example.*  | hint: using '^' prefix and '\.$' suffix are faster than pattern contains any character literally


## YOU CAN DELETE ALL BELOW CONTENT OR KEEP IT AS DEFAULT

# The GAFAM
NX /google /doubleclick /crashlytics /gstatic /firebaseio 
NX /facebook /tfbnw /fbcdn
RF /(wns)|(wdcp)|(wdcpalt)\.windows\.com\.$ /1drv\.com\.$ # Win32/HostsFileHijack wiki/Criticism_of_Microsoft
RF /geo\.yahoo\.com\.$ /udc\.yahoo\.com\.$

# Criticism of other software companies:
# wiki Criticism of Facebook
# wiki Criticism of Apple
# wiki Criticism of Google
# wiki Criticism of Yahoo!

# github&aws......fruIT&apple.....hoo.^$^

NX /^ad\.
NX /^ads\.
NX /^banner\.
NX /^banners\.
NX /^creatives\.
NX /^oas\.
NX /^oascentral\.        # inline comments are allowed after whitespaces and a pound sign
NX /^stats\.
NX /^tag\.
NX /^telemetry\.
NX /^tracker\.
NX /\.local\.$
NX /eth0.\.me\.$
NX /.*\.workgroup\.$
NX /\.in-addr\.arpa\.$

127.0.0.1 localhost
[::1]     localhost

# static addresses always work even on 'NX /google'
8.8.8.8                        dns.google.com.
8.8.4.4                        dns.google.com.
#[2001:4860:4860::]             dns.google.com. # NO_IPV6

PL time.windows.com. time.nist.gov. time-nw.nist.gov. time-a.nist.gov. time-b.nist.gov. pool.ntp.org.
AS pool.ntp.org. /[01]\.pool\.ntp\.org\.$ /[0-3]\.vendor\.pool\.ntp\.org\.$
